&НаКлиенте
Перем КолСекундОжидания;
&НаКлиенте
Перем ДатаНачалаОжидания;
&НаКлиенте
Перем ИмяРегламентногоЗадания;

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-ADD
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-ADD.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Перем Ожидаем;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	// описание шагов
	// пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты, Снипет, ИмяПроцедуры, ПредставлениеТеста, ОписаниеШага, ТипШагаДляОписания, ТипШагаВДереве);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВыполняюМетодРегламентногоЗаданияСИменем(Парам01)","ВыполняюМетодРегламентногоЗаданияСИменем","Когда выполняю метод регламентного задания с именем ""РегламентноеЗадание1""","", "Данные.Регламентные задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВыполняюМетодРегламентногоЗадания(Парам01)","ВыполняюМетодРегламентногоЗадания","Когда выполняю метод регламентного задания ""Регламентное задание1""","", "Данные.Регламентные задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗапускаюРегламентноеЗаданиеСИменем(Парам01)","ЗапускаюРегламентноеЗаданиеСИменем","Когда запускаю регламентное задание с именем ""ИмяИзМетаданных""","", "Данные.Регламентные задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(Парам01,Парам02)","ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд","И жду завершения регламентного задания с именем ""ИмяИзМетаданных"" в течение ""10"" секунд","", "Данные.Регламентные задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЗапускаюРегламентноеЗадание(Парам01)","ЗапускаюРегламентноеЗадание","Когда запускаю регламентное задание ""Заголовок задания""","", "Данные.Регламентные задания");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(Парам01,Парам02)","ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд","И жду завершения регламентного задания ""Заголовок задания"" в течение ""10"" секунд","", "Данные.Регламентные задания");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область Шаги

///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда выполняю метод регламентного задания с именем "РегламентноеЗадание1"
//@ВыполняюМетодРегламентногоЗаданияСИменем(Парам01)
Процедура ВыполняюМетодРегламентногоЗаданияСИменем(ИмяРегламентногоЗадания) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Имя = ВыполняюМетодРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания);
КонецПроцедуры

&НаКлиенте
//Когда выполняю метод регламентного задания "Регламентное задание1"
//@ВыполняюМетодРегламентногоЗадания(Парам01)
Процедура ВыполняюМетодРегламентногоЗадания(СинонимРегламентногоЗадания) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	Имя = ВыполняюМетодРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания);
КонецПроцедуры

&НаКлиенте
//Когда запускаю регламентное задание с именем "ИмяИзМетаданных"
//@ЗапускаюРегламентноеЗаданиеСИменем(Парам01)
Процедура ЗапускаюРегламентноеЗаданиеСИменем(ИмяРегламентногоЗадания) Экспорт
	//Ванесса.ПосмотретьЗначение(Парам01,Истина);
	ЗапускаюРегламентноеЗаданиеСИменемСервер(ИмяРегламентногоЗадания)
КонецПроцедуры

&НаКлиенте
//Когда запускаю регламентное задание "Заголовок задания"
//@ЗапускаюРегламентноеЗадание(Парам01)
Процедура ЗапускаюРегламентноеЗадание(СинонимРегламентногоЗадания) Экспорт
	ЗапускаюРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания)
КонецПроцедуры

&НаКлиенте
//И жду завершения регламентного задания с именем "ИмяИзМетаданных" в течение 10 секунд
//@ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(Парам01,Парам02)
Процедура ЖдуЗавершенияРегламентногоЗаданияСИменемВТечениеСекунд(ПарамИмяРегламентногоЗадания, КолСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();

	ИмяРегламентногоЗадания = ПарамИмяРегламентногоЗадания;
	КолСекундОжидания  = КолСекунд;
	ДатаНачалаОжидания = ТекущаяДата();

	ПодключитьОбработчикОжидания("ОбработчикОжидания", 1);
КонецПроцедуры

&НаКлиенте
//И жду завершения регламентного задания "Заголовок задания" в течение 10 секунд
//@ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(Парам01,Парам02)
Процедура ЖдуЗавершенияРегламентногоЗаданияВТечениеСекунд(СинонимРегламентногоЗадания, КолСекунд) Экспорт
	Ванесса.ЗапретитьВыполнениеШагов();

	ИмяРегламентногоЗадания = НайтиИмяРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания);
	КолСекундОжидания  = КолСекунд;
	ДатаНачалаОжидания = ТекущаяДата();

	ПодключитьОбработчикОжидания("ОбработчикОжидания", 1);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВыполняюМетодРегламентногоЗаданияСИменемСервер(ИмяРегламентногоЗадания)
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	ВыполнитьРегламентное(МетаЗадание);
	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания)
	МетаЗадание = Метаданные.РегламентныеЗадания.Найти(ИмяРегламентногоЗадания);
	Если МетаЗадание = Неопределено Тогда
		ВызватьИсключение "Не найдено регламентное задание по имени " + ИмяРегламентногоЗадания;
	КонецЕсли;
	Возврат МетаЗадание;
КонецФункции

&НаСервереБезКонтекста
Процедура ВыполнитьРегламентное(МетаЗадание)
	Выполнить(МетаЗадание.ИмяМетода + "();");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполняюМетодРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания)
	МетаЗадание = НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ВыполнитьРегламентное(МетаЗадание);
КонецФункции

&НаСервереБезКонтекста
Функция НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания)
	РегулярныеВыражения = ВнешниеОбработки.Создать("РегулярныеВыражения");
	Для каждого МетаЗадание Из Метаданные.РегламентныеЗадания Цикл
		Если МетаЗадание.Синоним = СинонимРегламентногоЗадания 
				Или РегулярныеВыражения.СтрокаСоответствуетШаблону(МетаЗадание.Синоним, СинонимРегламентногоЗадания) Тогда
				
			Возврат МетаЗадание;
		КонецЕсли;
	КонецЦикла; 
	
	ВызватьИсключение "Не найдено регламентное задание по синониму " + СинонимРегламентногоЗадания;
КонецФункции

&НаСервереБезКонтекста
Функция НайтиИмяРегламентногоЗаданияПоСинонимуСервер(СинонимРегламентногоЗадания)
	РегулярныеВыражения = ВнешниеОбработки.Создать("РегулярныеВыражения");
	Для каждого МетаЗадание Из Метаданные.РегламентныеЗадания Цикл
		Если МетаЗадание.Синоним = СинонимРегламентногоЗадания 
				Или РегулярныеВыражения.СтрокаСоответствуетШаблону(МетаЗадание.Синоним, СинонимРегламентногоЗадания) Тогда
				
			Возврат МетаЗадание.Имя;
		КонецЕсли;
	КонецЦикла; 
	
	ВызватьИсключение "Не найдено регламентное задание по синониму " + СинонимРегламентногоЗадания;
КонецФункции

&НаСервереБезКонтекста
Функция ЗапускаюРегламентноеЗаданиеСИменемСервер(ИмяРегламентногоЗадания) Экспорт
	//МетаЗадание = Метаданные.РегламентныеЗадания.Найти(ИмяРегламентногоЗадания);
	//Если МетаЗадание = Неопределено Тогда
	//	ВызватьИсключение "Не найдено регламентное задание по имени " + ИмяРегламентногоЗадания;
	//КонецЕсли;
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	ФЗ = ФоновыеЗадания.Выполнить(МетаЗадание.ИмяМетода, Неопределено, МетаЗадание.Имя);

	Возврат МетаЗадание.Имя;
КонецФункции

&НаСервереБезКонтекста
Функция ЗапускаюРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания) Экспорт
	МетаЗадание = НайтиРегламентноеЗаданиеПоСинонимуСервер(СинонимРегламентногоЗадания);
	ФЗ = ФоновыеЗадания.Выполнить(МетаЗадание.ИмяМетода, Неопределено, МетаЗадание.Имя);
	Возврат МетаЗадание.Имя;
КонецФункции

&НаКлиенте
Процедура ОбработчикОжидания()
	ИмяОбработчика = "ОбработчикОжидания";

	Завершено = ФоновоеЗаданиеЗавершеноСервер(ИмяРегламентногоЗадания);
	Если (ТекущаяДата() - ДатаНачалаОжидания) >= КолСекундОжидания Тогда
		ОтключитьОбработчикОжидания(ИмяОбработчика);
		Ванесса.ПродолжитьВыполнениеШагов();
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФоновоеЗаданиеЗавершеноСервер(ИмяРегламентногоЗадания)
	МетаЗадание = НайтиРегламентноеЗаданиеПоИмениСервер(ИмяРегламентногоЗадания);
	Отбор = Новый Структура("ИмяМетода", МетаЗадание.ИмяМетода);
	МассивФоновых = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Если МассивФоновых.Количество() = 0 Тогда
		Возврат Истина;		
	ИначеЕсли МассивФоновых.Количество() > 1 Тогда
		ВызватьИсключение "Количество фоновых заданий больше одного. Имя регламентного задания " + МетаЗадание.Имя;
	КонецЕсли;
	
	ФЗ = МассивФоновых[0];
	Если ФЗ.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Возврат Ложь;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
		Возврат Истина;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда
		ВызватьИсключение "Фоновое задание завершено аварийно. Имя регламентного задания " + МетаЗадание.Имя;
	ИначеЕсли ФЗ.Состояние = СостояниеФоновогоЗадания.Отменено Тогда
		ВызватьИсключение "Фоновое задание завершено отменено. Имя регламентного задания " + МетаЗадание.Имя;
	КонецЕсли;
КонецФункции

#КонецОбласти