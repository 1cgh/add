
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеЗаписиРегистрСведенийПодчиненРегистратору(Парам01)","ЯУдаляюВсеЗаписиРегистрСведенийПодчиненРегистратору","И я удаляю все записи РегистрСведенийПодчиненРегистратору ""РСПодчиненРегистраторуПериодический""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВМетаданныхЕстьРегистрНакопления(Парам01)","ВМетаданныхЕстьРегистрНакопления","Когда в метаданных есть РегистрНакопления ""РегистрНакопления1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеЗаписиРегистрНакопления(Парам01)","ЯУдаляюВсеЗаписиРегистрНакопления","И я удаляю все записи РегистрНакопления ""РегистрНакопления1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеНетЗаписейРегистрНакопления(Парам01)","ВБазеНетЗаписейРегистрНакопления","И в базе нет записей РегистрНакопления ""РегистрНакопления1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеПоявилсяХотяБыОднаЗаписьРегистрНакопления(Парам01)","ВБазеПоявилсяХотяБыОднаЗаписьРегистрНакопления","Тогда В базе появился хотя бы одна запись РегистрНакопления ""РегистрНакопления1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВМетаданныхЕстьРегистрБухгалтерии(Парам01)","ВМетаданныхЕстьРегистрБухгалтерии","Когда в метаданных есть РегистрБухгалтерии ""РегистрБухгалтерии1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеЗаписиРегистрБухгалтерии(Парам01)","ЯУдаляюВсеЗаписиРегистрБухгалтерии","И я удаляю все записи РегистрБухгалтерии ""РегистрБухгалтерии1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеНетЗаписейРегистрБухгалтерии(Парам01)","ВБазеНетЗаписейРегистрБухгалтерии","И в базе нет записей РегистрБухгалтерии ""РегистрБухгалтерии1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеПоявилсяХотяБыОднаЗаписьРегистрБухгалтерии(Парам01)","ВБазеПоявилсяХотяБыОднаЗаписьРегистрБухгалтерии","Тогда В базе появился хотя бы одна запись РегистрБухгалтерии ""РегистрБухгалтерии1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВМетаданныхЕстьРегистрРасчета(Парам01)","ВМетаданныхЕстьРегистрРасчета","Когда в метаданных есть РегистрРасчета ""РегистрРасчета1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯУдаляюВсеЗаписиРегистрРасчета(Парам01)","ЯУдаляюВсеЗаписиРегистрРасчета","И я удаляю все записи РегистрРасчета ""РегистрРасчета1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеНетЗаписейРегистрРасчета(Парам01)","ВБазеНетЗаписейРегистрРасчета","И в базе нет записей РегистрРасчета ""РегистрРасчета1""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВБазеПоявилсяХотяБыОднаЗаписьРегистрРасчета(Парам01)","ВБазеПоявилсяХотяБыОднаЗаписьРегистрРасчета","Тогда В базе появился хотя бы одна запись РегистрРасчета ""РегистрРасчета1""","","");

	
	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

#Область ОбработкаРегистровСведений
	
&НаСервереБезКонтекста
Функция ЯУдаляюВсеЗаписиРегистрСведенийСервер(ВидРС)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Регистратор
		|ИЗ
		|	РегистрСведений.РегистрСведений1 КАК РегистрСведений1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрСведений1",ВидРС);
	Результат = Запрос.Выполнить();


	НаборЗаписей = РегистрыСведений[ВидРС].СоздатьНаборЗаписей();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЦикла;
	
	
	
КонецФункции	

&НаКлиенте
//И я удаляю все записи РегистрСведенийПодчиненРегистратору "РСПодчиненРегистраторуПериодический"
//@ЯУдаляюВсеЗаписиРегистрСведенийПодчиненРегистратору(Парам01)
Процедура ЯУдаляюВсеЗаписиРегистрСведенийПодчиненРегистратору(ВидРС) Экспорт
	
	ЯУдаляюВсеЗаписиРегистрСведенийСервер(ВидРС);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработкаРегистровНакопления

&НаСервереБезКонтекста
Функция ВМетаданныхЕстьРНСервер(ВидРН)
	Нашел = Ложь;
	Для каждого Элем Из Метаданные.РегистрыНакопления Цикл
		Имя = Элем.Имя;
		Если НРег(Имя) = НРег(ВидРН) Тогда
			Нашел = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Нашел; 
КонецФункции	

&НаКлиенте
//Когда в метаданных есть РегистрНакопления "РегистрНакопления1"
//@ВМетаданныхЕстьРегистрНакопления(Парам01)
Процедура ВМетаданныхЕстьРегистрНакопления(ВидРН) Экспорт
	
	Нашел = ВМетаданныхЕстьРНСервер(ВидРН);
	
	Ванесса.ПроверитьРавенство(Нашел,Истина,"В метаданных есть вид РН " + ВидРН);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯУдаляюВсеЗаписиРегистрНакопленияСервер(ВидРН)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Регистратор
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1 КАК РегистрНакопления1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрНакопления1",ВидРН);
	Результат = Запрос.Выполнить();


	НаборЗаписей = РегистрыНакопления[ВидРН].СоздатьНаборЗаписей();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЦикла;
			
КонецФункции	

&НаКлиенте
//И я удаляю все записи РегистрНакопления "РегистрНакопления1"
//@ЯУдаляюВсеЗаписиРегистрНакопления(Парам01)
Процедура ЯУдаляюВсеЗаписиРегистрНакопления(ВидРН) Экспорт
	
	ЯУдаляюВсеЗаписиРегистрНакопленияСервер(ВидРН);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеНетЗаписейРНСервер(ВидРН)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1 КАК РегистрНакопления1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрНакопления1",ВидРН);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции	

&НаКлиенте
//И в базе нет записей РегистрНакопления "РегистрНакопления1"
//@ВБазеНетЗаписейРегистрНакопления(Парам01)
Процедура ВБазеНетЗаписейРегистрНакопления(ВидРН) Экспорт
	КолЭлементов = ВБазеНетЗаписейРНСервер(ВидРН);
	Ванесса.ПроверитьРавенство(КолЭлементов,0,"Не должно быть записей");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеПоявилсяХотяБыОднаЗаписьРНСервер(ВидРН)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрНакопления.РегистрНакопления1 КАК РегистрНакопления1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрНакопления1",ВидРН);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции	


&НаКлиенте
//Тогда В базе появился хотя бы одна запись РегистрНакопления "РегистрНакопления1"
//@ВБазеПоявилсяХотяБыОднаЗаписьРегистрНакопления(Парам01)
Процедура ВБазеПоявилсяХотяБыОднаЗаписьРегистрНакопления(ВидРН) Экспорт
	КолЭлементов = ВБазеПоявилсяХотяБыОднаЗаписьРНСервер(ВидРН);
	Ванесса.ПроверитьНеРавенство(КолЭлементов,0,"В базе должны быть записи");
КонецПроцедуры

#КонецОбласти 

#Область ОбработкаРегистровБухгалтерии

&НаСервереБезКонтекста
Функция ВМетаданныхЕстьРБСервер(ВидРБ)
	Нашел = Ложь;
	Для каждого Элем Из Метаданные.РегистрыБухгалтерии Цикл
		Имя = Элем.Имя;
		Если НРег(Имя) = НРег(ВидРБ) Тогда
			Нашел = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Нашел; 
КонецФункции	

&НаКлиенте
//Когда в метаданных есть РегистрБухгалтерии "РегистрБухгалтерии1"
//@ВМетаданныхЕстьРегистрБухгалтерии(Парам01)
Процедура ВМетаданныхЕстьРегистрБухгалтерии(ВидРБ) Экспорт
	
	Нашел = ВМетаданныхЕстьРБСервер(ВидРБ);
	
	Ванесса.ПроверитьРавенство(Нашел,Истина,"В метаданных есть вид РБ " + ВидРБ);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯУдаляюВсеЗаписиРегистрБухгалтерииСервер(ВидРБ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Регистратор
		|ИЗ
		|	РегистрБухгалтерии.РегистрБухгалтерии1 КАК РегистрБухгалтерии1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрБухгалтерии1",ВидРБ);
	Результат = Запрос.Выполнить();


	НаборЗаписей = РегистрыБухгалтерии[ВидРБ].СоздатьНаборЗаписей();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЦикла;
			
КонецФункции	

&НаКлиенте
//И я удаляю все записи РегистрБухгалтерии "РегистрБухгалтерии1"
//@ЯУдаляюВсеЗаписиРегистрБухгалтерии(Парам01)
Процедура ЯУдаляюВсеЗаписиРегистрБухгалтерии(ВидРБ) Экспорт
	
	ЯУдаляюВсеЗаписиРегистрБухгалтерииСервер(ВидРБ);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеНетЗаписейРБСервер(ВидРБ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрБухгалтерии.РегистрБухгалтерии1 КАК РегистрБухгалтерии1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрБухгалтерии1",ВидРБ);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции

&НаКлиенте
//И в базе нет записей РегистрБухгалтерии "РегистрБухгалтерии1"
//@ВБазеНетЗаписейРегистрБухгалтерии(Парам01)
Процедура ВБазеНетЗаписейРегистрБухгалтерии(ВидРБ) Экспорт
	КолЭлементов = ВБазеНетЗаписейРБСервер(ВидРБ);
	Ванесса.ПроверитьРавенство(КолЭлементов,0,"Не должно быть записей");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеПоявилсяХотяБыОднаЗаписьРБСервер(ВидРБ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрБухгалтерии.РегистрБухгалтерии1 КАК РегистрБухгалтерии1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрБухгалтерии1",ВидРБ);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции	

&НаКлиенте
//Тогда В базе появился хотя бы одна запись РегистрБухгалтерии "РегистрБухгалтерии1"
//@ВБазеПоявилсяХотяБыОднаЗаписьРегистрБухгалтерии(Парам01)
Процедура ВБазеПоявилсяХотяБыОднаЗаписьРегистрБухгалтерии(ВидРБ) Экспорт
	КолЭлементов = ВБазеПоявилсяХотяБыОднаЗаписьРБСервер(ВидРБ);
	Ванесса.ПроверитьНеРавенство(КолЭлементов,0,"В базе должны быть записи");
КонецПроцедуры

#КонецОбласти 

#Область ОбработкаРегистровРасчета

&НаСервереБезКонтекста
Функция ВМетаданныхЕстьРРСервер(ВидРР)
	Нашел = Ложь;
	Для каждого Элем Из Метаданные.РегистрыРасчета Цикл
		Имя = Элем.Имя;
		Если НРег(Имя) = НРег(ВидРР) Тогда
			Нашел = Истина;
			Прервать;
		КонецЕсли;	 
	КонецЦикла;
	
	Возврат Нашел; 
КонецФункции	

&НаКлиенте
//Когда в метаданных есть РегистрРасчета "РегистрРасчета1"
//@ВМетаданныхЕстьРегистрРасчета(Парам01)
Процедура ВМетаданныхЕстьРегистрРасчета(ВидРР) Экспорт
	
	Нашел = ВМетаданныхЕстьРРСервер(ВидРР);
	
	Ванесса.ПроверитьРавенство(Нашел,Истина,"В метаданных есть вид РР " + ВидРР);
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЯУдаляюВсеЗаписиРегистрРасчетаСервер(ВидРР)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Регистратор
		|ИЗ
		|	РегистрРасчета.РегистрРасчета1 КАК РегистрРасчета1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрРасчета1",ВидРР);
	Результат = Запрос.Выполнить();


	НаборЗаписей = РегистрыРасчета[ВидРР].СоздатьНаборЗаписей();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаДетальныеЗаписи.Регистратор);
		НаборЗаписей.Прочитать();
		НаборЗаписей.Очистить();
		НаборЗаписей.Записать();
	КонецЦикла;
			
КонецФункции	

&НаКлиенте
//И я удаляю все записи РегистрРасчета "РегистрРасчета1"
//@ЯУдаляюВсеЗаписиРегистрРасчета(Парам01)
Процедура ЯУдаляюВсеЗаписиРегистрРасчета(ВидРР) Экспорт
	
	ЯУдаляюВсеЗаписиРегистрРасчетаСервер(ВидРР);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеНетЗаписейРРСервер(ВидРР)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрРасчета.РегистрРасчета1 КАК РегистрРасчета1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрРасчета1",ВидРР);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции

&НаКлиенте
//И в базе нет записей РегистрБухгалтерии "РегистрРасчета1"
//@ВБазеНетЗаписейРегистрРасчета(Парам01)
Процедура ВБазеНетЗаписейРегистрРасчета(ВидРР) Экспорт
	КолЭлементов = ВБазеНетЗаписейРРСервер(ВидРР);
	Ванесса.ПроверитьРавенство(КолЭлементов,0,"Не должно быть записей");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВБазеПоявилсяХотяБыОднаЗаписьРРСервер(ВидРР)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	*
		|ИЗ
		|	РегистрРасчета.РегистрРасчета1 КАК РегистрРасчета1";

	Запрос.Текст = СтрЗаменить(Запрос.Текст,"РегистрРасчета1",ВидРР);
	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат 1;
	КонецЦикла;
	
	Возврат 0;

КонецФункции	

&НаКлиенте
//Тогда В базе появился хотя бы одна запись РегистрРасчета "РегистрРасчета1"
//@ВБазеПоявилсяХотяБыОднаЗаписьРегистрРасчета(Парам01)
Процедура ВБазеПоявилсяХотяБыОднаЗаписьРегистрРасчета(ВидРР) Экспорт
	КолЭлементов = ВБазеПоявилсяХотяБыОднаЗаписьРРСервер(ВидРР);
	Ванесса.ПроверитьНеРавенство(КолЭлементов,0,"В базе должны быть записи");
КонецПроцедуры

#КонецОбласти 
