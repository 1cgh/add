#Использовать logos
#Использовать asserts
#Использовать 1commands

Перем юТест;
// Перем Лог;

Функция ПолучитьСписокТестов(ЮнитТестирование) Экспорт
	
	юТест = ЮнитТестирование;
	
	ВсеТесты = Новый Массив;
	
	ВсеТесты.Добавить("ТестДолжен_ПроверитьСовпадениеВсехКлючей");
	ВсеТесты.Добавить("ТестДолжен_ПроверитьИменаРусскихКлючейВКоллекцияКомандЗапуска");
	ВсеТесты.Добавить("ТестДолжен_СоздатьОбщуюКоллекциюПараетров");

	Возврат ВсеТесты;
КонецФункции

Процедура ПередЗапускомТеста() Экспорт
	// ВключитьПоказОтладки();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьСовпадениеВсехКлючей() Экспорт

	СоздатьСтруктуруПараметровЗапуска = СоздатьСтруктуруПараметровЗапуска();
	КоллекцияКомандЗапуска = КоллекцияКомандЗапуска();

	ОписаниеОшибок = "";

	Коллекция1 = КоллекцияКомандЗапуска;
	ОписанияКоллекция1 = "КоллекцияКомандЗапуска";
	Коллекция2 = СоздатьСтруктуруПараметровЗапуска;
	ОписанияКоллекция2 = "СоздатьСтруктуруПараметровЗапуска";

	ПроверитьКоллекции(Коллекция1, Коллекция2, ОписанияКоллекция1, ОписанияКоллекция2, ОписаниеОшибок);
	
	Коллекция1 = СоздатьСтруктуруПараметровЗапуска;
	ОписанияКоллекция1 = "СоздатьСтруктуруПараметровЗапуска";
	Коллекция2 = КоллекцияКомандЗапуска;
	ОписанияКоллекция2 = "КоллекцияКомандЗапуска";
	
	ПроверитьКоллекции(Коллекция1, Коллекция2, ОписанияКоллекция1, ОписанияКоллекция2, ОписаниеОшибок);

	Попытка
		Ожидаем.Что(СоздатьСтруктуруПараметровЗапуска.Количество(),
			"СоздатьСтруктуруПараметровЗапуска.Количество() д.б. равно КоллекцияКомандЗапуска.Количество(), а это не так.")
		.Равно(КоллекцияКомандЗапуска.Количество());
	Исключение
		ОписаниеОшибок  = ОписаниеОшибок  + ОписаниеОшибки();
	КонецПопытки;
	Ожидаем.Что(ОписаниеОшибок,
		"Найдены ошибки.")
	.Равно("");

КонецПроцедуры

Процедура ТестДолжен_ПроверитьИменаРусскихКлючейВКоллекцияКомандЗапуска() Экспорт

	КоллекцияКомандЗапуска = КоллекцияКомандЗапуска();

	ОписаниеОшибок = "";

	Для каждого КлючЗначение Из КоллекцияКомандЗапуска Цикл
		Попытка
			Ожидаем.Что(КлючЗначение.Ключ,
				СтрШаблон("Ключ структуры %1 д.б. равен ключу ""Р"" из вложенной структуры",
					КлючЗначение.Ключ))
				.Равно(КлючЗначение.Значение["Р"]);
		Исключение
			ОписаниеОшибок  = ОписаниеОшибок  + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;

	Ожидаем.Что(ОписаниеОшибок,
		"Найдены ошибки.")
	.Равно("");

КонецПроцедуры

Процедура ТестДолжен_СоздатьОбщуюКоллекциюПараетров() Экспорт
	ТекстНовойКоллекции();
КонецПроцедуры

Функция ТекстНовойКоллекции()
	СоздатьСтруктуруПараметровЗапуска = СоздатьСтруктуруПараметровЗапуска();
	КоллекцияКомандЗапуска = КоллекцияКомандЗапуска();
	
	ЗаписьТекста = Новый ЗаписьТекста;
	ТекстовыйДокумент = Новый ТекстовыйДокумент;
	Для каждого КлючЗначение Из КоллекцияКомандЗапуска() Цикл
		Ключ = КлючЗначение.Ключ;
		ВложеннаяСтруктура = КлючЗначение.Значение;
		ЗначениеРусское = ВложеннаяСтруктура.Р;
		ЗначениеАнглийское = ВложеннаяСтруктура.А;
		ЗначениеПоУмолчанию = СоздатьСтруктуруПараметровЗапуска[Ключ];
		

		НоваяСтрока = СтрШаблон(
			"Рез.Вставить(""%1"", Новый Структура(""Р, А, ПоУмолчанию"", ""%2"", ""%3"", ""%4""));",
			Ключ, ЗначениеРусское, ЗначениеАнглийское, ЗначениеПоУмолчанию);
		Сообщить(НоваяСтрока);

		ЗаписьТекста.ЗаписатьСтроку(НоваяСтрока);
	КонецЦикла;
КонецФункции

Процедура ПроверитьКоллекции(Коллекция1, Коллекция2, ОписанияКоллекция1, ОписанияКоллекция2, ОписаниеОшибок)
	Для каждого КлючЗначение Из Коллекция1 Цикл
		ЕстьКлюч = Коллекция2.Свойство(КлючЗначение.Ключ);
		Попытка
			Ожидаем.Что(ЕстьКлюч,
				СтрШаблон("Ключ %1 из коллекции %2 д.б. в коллекции %3, а это не так.",
					КлючЗначение.Ключ, ОписанияКоллекция1, ОписанияКоллекция2))
			.ЭтоИстина();
		Исключение
			ОписаниеОшибок  = ОписаниеОшибок  + ОписаниеОшибки() + Символы.ПС;
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры

// &НаКлиентеНаСервереБезКонтекста
Функция СоздатьСтруктуруПараметровЗапуска()
	Рез = Новый Структура;
	Рез.Вставить("StartFeaturePlayer", Ложь);
	Рез.Вставить("КаталогФич", "");
	Рез.Вставить("КаталогиБиблиотек", Новый Массив);
	Рез.Вставить("СписокТеговИсключение", Новый Массив);
	Рез.Вставить("СписокТеговОтбор", Новый Массив);
	Рез.Вставить("ВыгрузитьPIDTestManager", Ложь);
	Рез.Вставить("ИмяФайлаPIDTestManager", "");
	Рез.Вставить("ИмяФайлаВнешнихКомандФреймворка", "");
	Рез.Вставить("ПриравниватьPendingКFailed", Ложь);
	Рез.Вставить("ОстановкаПриВозникновенииОшибки", Ложь);
	Рез.Вставить("ДелатьСообщенияТранслитом", Ложь);
	Рез.Вставить("СоздаватьИнструкциюHTML", Ложь);
	Рез.Вставить("СоздаватьИнструкциюMarkdown", Ложь);
	Рез.Вставить("СоздаватьИнструкциюВидео", Ложь);
	Рез.Вставить("ДелатьЛогВыполненияСценариевВЖР", Истина);
	Рез.Вставить("ДелатьЛогВыполненияСценариевВТекстовыйФайл", Ложь);
	Рез.Вставить("ИмяФайлаЛогВыполненияСценариев", "");
	Рез.Вставить("ЗакрытьTestClientПослеЗапускаСценариев", Ложь);
	Рез.Вставить("КаталогOutputИнструкцияHTML", "");
	Рез.Вставить("КаталогOutputИнструкцияMarkdown", "");
	Рез.Вставить("КаталогOutputИнструкцияВидео", "");
	Рез.Вставить("ДелатьОтчетВоВнутреннемФормате", Ложь);
	Рез.Вставить("ДелатьОтчетВФорматеАллюр", Ложь);
	Рез.Вставить("ОтображатьОтчетAllureВБраузере", Ложь);
	Рез.Вставить("КаталогИнструментов", "");
	Рез.Вставить("КаталогПроекта", "");
	Рез.Вставить("КаталогOutputAllure", "");
	Рез.Вставить("КаталогOutputAllureБазовый", "");
	Рез.Вставить("ДелатьОтчетВФорматеjUnit", Ложь);
	Рез.Вставить("КаталогOutputjUnit", "");
	Рез.Вставить("ДелатьОтчетВФорматеCucumberJson", Ложь);
	Рез.Вставить("КаталогOutputCucumberJson", "");
	Рез.Вставить("ДобавлятьКИмениСценарияУсловияВыгрузки", Ложь);
	Рез.Вставить("СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", Ложь);
	Рез.Вставить("ВыгружатьСтатусВыполненияСценариевВФайл", Ложь);
	Рез.Вставить("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", "");
	Рез.Вставить("ВыполнитьСценарии", Ложь);
	Рез.Вставить("ВыполнитьСценарииСТекущегоШага", Ложь);
	Рез.Вставить("НомерСтрокиДляЗапускаСТекущегоШагаСценария", "");
	Рез.Вставить("ЗагрузитьСценарии", Ложь);
	Рез.Вставить("ЗавершитьРаботуСистемы", Ложь);
	Рез.Вставить("ИмяСборки", "");
	Рез.Вставить("ДелатьСкриншотПриВозникновенииОшибки", Ложь);
	Рез.Вставить("СниматьСкриншотКаждогоОкна1С", Ложь);
	Рез.Вставить("КомандаСделатьСкриншот", "");
	Рез.Вставить("КаталогOutputСкриншоты", "");
	Рез.Вставить("ЗапускатьТестКлиентВРежимеОтладки", Ложь);
	Рез.Вставить("КлючиОтладки", "");
	Рез.Вставить("АдресОтладчика", "");
	Рез.Вставить("ВыполнятьШагиАссинхронно", Ложь);
	
	Рез.Вставить("ЗаписьВидеоКомандаНачатьЗаписьВидео", "");
	Рез.Вставить("ЗаписьВидеоФайлКурсораМышки", "");
	Рез.Вставить("ЗаписьВидеоКаталогДляВременныхФайлов", "");
	Рез.Вставить("ЗаписьВидеоФайлВодянойЗнак", "");
	Рез.Вставить("ЗаписьВидеоКомандаFfmpeg", "");
	Рез.Вставить("ЗаписьВидеоКомандаConvert", "");
	Рез.Вставить("ЗаписьВидеоКаталогМузыки", "");
	Рез.Вставить("ЗаписьВидеоДелатьНаложениеTTS", Ложь);
	Рез.Вставить("ЗаписьВидеоПутьКДвижкуTTS", "");
	Рез.Вставить("ЗаписьВидеоИмяTTS", "");
	Рез.Вставить("ЗаписьВидеоСловарьЗамен", "");
	Рез.Вставить("ЗаписьВидеоСловарьЗаменСписок", Неопределено);
	Рез.Вставить("ЗаписьВидеоЭкранШирина", "");
	Рез.Вставить("ЗаписьВидеоЭкранВысота", "");
	Рез.Вставить("ЗаписьВидеоКоличествоКадров", "");
	Рез.Вставить("ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", Ложь);
	Рез.Вставить("ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", Ложь);
	
	Рез.Вставить("ВерсияПлатформыДляГенерацииEPF", "");
	
	Рез.Вставить("ДополнительныеПараметры", Неопределено);
	
	Рез.Вставить("КлиентыТестирования", Неопределено);
	Рез.Вставить("ТаймаутЗапуска1С", "25");
	Рез.Вставить("ДиапазонПортовTestclient", "");
	
	Рез.Вставить("СоздаватьОбластиПриГенерацииКода", Истина);
	
	Возврат Рез;
КонецФункции
	
// &НаКлиенте
Функция КоллекцияКомандЗапуска()
	Рез = СоздатьСтруктуруПараметровЗапуска();
	Рез.Вставить("StartFeaturePlayer", Новый Структура("Р, А", "StartFeaturePlayer", "startfeatureplayer"));
	Рез.Вставить("КаталогФич", Новый Структура("Р, А", "КаталогФич", "featurepath"));
	Рез.Вставить("КаталогиБиблиотек", Новый Структура("Р, А", "КаталогиБиблиотек", "librarycatalogs"));
	Рез.Вставить("СписокТеговИсключение", Новый Структура("Р, А", "СписокТеговИсключение", "ignoretags"));
	Рез.Вставить("СписокТеговОтбор", Новый Структура("Р, А", "СписокТеговОтбор", "filtertags"));
	Рез.Вставить("ВыгрузитьPIDTestManager", Новый Структура("Р, А", "ВыгрузитьPIDTestManager", "returnpidoftestmanager"));
	Рез.Вставить("ИмяФайлаPIDTestManager", Новый Структура("Р, А", "ИмяФайлаPIDTestManager", "filenamepidtestmanager"));
	Рез.Вставить("ИмяФайлаВнешнихКомандФреймворка", Новый Структура("Р, А", "ИмяФайлаВнешнихКомандФреймворка", "fileofcommand"));
	Рез.Вставить("ПриравниватьPendingКFailed", Новый Структура("Р, А", "ПриравниватьPendingКFailed", "pendingequalfailed"));
	Рез.Вставить("ОстановкаПриВозникновенииОшибки", Новый Структура("Р, А", "ОстановкаПриВозникновенииОшибки", "stoponerror"));
	
	
	Рез.Вставить("ДелатьСообщенияТранслитом", Новый Структура("Р, А", "ДелатьСообщенияТранслитом", "translatemassage"));
	Рез.Вставить("СоздаватьИнструкциюHTML", Новый Структура("Р, А", "СоздаватьИнструкциюHTML", "htmlcreate"));
	Рез.Вставить("СоздаватьИнструкциюMarkdown", Новый Структура("Р, А", "СоздаватьИнструкциюMarkdown", "markdowncreate"));
	Рез.Вставить("СоздаватьИнструкциюВидео", Новый Структура("Р, А", "СоздаватьИнструкциюВидео", "videcreate"));
	Рез.Вставить("ДелатьЛогВыполненияСценариевВЖР", Новый Структура("Р, А", "ДелатьЛогВыполненияСценариевВЖР", "logtogr"));
	Рез.Вставить("ДелатьЛогВыполненияСценариевВТекстовыйФайл", Новый Структура("Р, А", "ДелатьЛогВыполненияСценариевВТекстовыйФайл", "logtotext"));
	Рез.Вставить("ИмяФайлаЛогВыполненияСценариев", Новый Структура("Р, А", "ИмяФайлаЛогВыполненияСценариев", "textlogname"));
	Рез.Вставить("ЗакрытьTestClientПослеЗапускаСценариев", Новый Структура("Р, А", "ЗакрытьTestClientПослеЗапускаСценариев", "closetestclient"));
	Рез.Вставить("КаталогOutputИнструкцияHTML", Новый Структура("Р, А", "КаталогOutputИнструкцияHTML", "htmlpath"));
	Рез.Вставить("КаталогOutputИнструкцияMarkdown", Новый Структура("Р, А", "КаталогOutputИнструкцияMarkdown", "markdownpath"));
	Рез.Вставить("КаталогOutputИнструкцияВидео", Новый Структура("Р, А", "КаталогOutputИнструкцияВидео", "videopath"));
	
	Рез.Вставить("ДелатьОтчетВоВнутреннемФормате", Новый Структура("Р, А", "ДелатьОтчетВоВнутреннемФормате", "simplereport"));	 
	
	Рез.Вставить("ДелатьОтчетВФорматеАллюр", Новый Структура("Р, А", "ДелатьОтчетВФорматеАллюр", "allurecreatereport"));	 
	Рез.Вставить("ОтображатьОтчетAllureВБраузере", Новый Структура("Р, А", "ОтображатьОтчетAllureВБраузере", "allureautoshow"));	 
	Рез.Вставить("КаталогИнструментов", Новый Структура("Р, А", "КаталогИнструментов", "instrpath"));	
	Рез.Вставить("КаталогПроекта", Новый Структура("Р, А", "КаталогПроекта", "projectpath"));
	Рез.Вставить("КаталогOutputAllure", Новый Структура("Р, А", "КаталогOutputAllure", "allurepath"));	
	Рез.Вставить("КаталогOutputAllureБазовый", Новый Структура("Р, А", "КаталогOutputAllureБазовый", "allurepathbase"));
	
	Рез.Вставить("ДелатьОтчетВФорматеjUnit", Новый Структура("Р, А", "ДелатьОтчетВФорматеjUnit", "junitcreatereport"));	 
	Рез.Вставить("КаталогOutputjUnit", Новый Структура("Р, А", "КаталогOutputjUnit", "junitpath"));	
	
	Рез.Вставить("ДелатьОтчетВФорматеCucumberJson", Новый Структура("Р, А", "ДелатьОтчетВФорматеCucumberJson", "cucumbercreatereport"));	 
	Рез.Вставить("КаталогOutputCucumberJson", Новый Структура("Р, А", "КаталогOutputCucumberJson", "cucumberreportpath"));	
	
	Рез.Вставить("ДобавлятьКИмениСценарияУсловияВыгрузки", Новый Структура("Р, А", "ДобавлятьКИмениСценарияУсловияВыгрузки", "addtofeaturefilter"));
	Рез.Вставить("СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", Новый Структура("Р, А", "СоздаватьПодкаталогВКаталогеAllureДляЭтойСборки", "createsubfolderforbuild"));
	Рез.Вставить("ВыгружатьСтатусВыполненияСценариевВФайл", Новый Структура("Р, А", "ВыгружатьСтатусВыполненияСценариевВФайл", "createlogs"));
	Рез.Вставить("ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", Новый Структура("Р, А", "ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев", "logpath"));
	Рез.Вставить("ВыполнитьСценарии", Новый Структура("Р, А", "ВыполнитьСценарии", "vanessarun"));
	Рез.Вставить("ВыполнитьСценарииСТекущегоШага", Новый Структура("Р, А", "ВыполнитьСценарии", "vanessarunfromthisstep"));
	Рез.Вставить("НомерСтрокиДляЗапускаСТекущегоШагаСценария", Новый Структура("Р, А", "НомерСтрокиДляЗапускаСТекущегоШагаСценария", "stepnumber"));
	Рез.Вставить("ЗагрузитьСценарии", Новый Структура("Р, А", "ЗагрузитьСценарии", "loadscenarios"));
	Рез.Вставить("ЗавершитьРаботуСистемы", Новый Структура("Р, А", "ЗавершитьРаботуСистемы", "vanessashutdown"));
	Рез.Вставить("ИмяСборки", Новый Структура("Р, А", "ИмяСборки", "buildname"));
	
	Рез.Вставить("ДелатьСкриншотПриВозникновенииОшибки", Новый Структура("Р, А", "ДелатьСкриншотПриВозникновенииОшибки", "onerrorscreenshot"));
	Рез.Вставить("СниматьСкриншотКаждогоОкна1С", Новый Структура("Р, А", "СниматьСкриншотКаждогоОкна1С", "onerrorscreenshoteverywindow"));
	Рез.Вставить("КомандаСделатьСкриншот", Новый Структура("Р, А", "КомандаСделатьСкриншот", "commandscreenshot"));
	Рез.Вставить("КаталогOutputСкриншоты", Новый Структура("Р, А", "КаталогOutputСкриншоты", "outputscreenshot"));
	
	Рез.Вставить("ЗапускатьТестКлиентВРежимеОтладки", 	Новый Структура("Р, А", "ЗапускатьТестКлиентВРежимеОтладки", "testclientdebug"));
	Рез.Вставить("КлючиОтладки", 						Новый Структура("Р, А", "КлючиОтладки", "testclientdebugkeys"));
	Рез.Вставить("АдресОтладчика", 						Новый Структура("Р, А", "АдресОтладчика", "testclientdebugaddress"));	
	Рез.Вставить("ВыполнятьШагиАссинхронно",				Новый Структура("Р, А", "ВыполнятьШагиАссинхронно", "makestepsasync"));
	
	Рез.Вставить("ЗаписьВидеоКомандаНачатьЗаписьВидео", Новый Структура("Р, А", "ЗаписьВидеоКомандаНачатьЗаписьВидео", "comandrecvideo"));
	Рез.Вставить("ЗаписьВидеоФайлКурсораМышки", Новый Структура("Р, А", "ЗаписьВидеоФайлКурсораМышки", "mousecurfile"));
	Рез.Вставить("ЗаписьВидеоКаталогДляВременныхФайлов", Новый Структура("Р, А", "ЗаписьВидеоКаталогДляВременныхФайлов", "tempfolderforvideo"));
	Рез.Вставить("ЗаписьВидеоФайлВодянойЗнак", Новый Структура("Р, А", "ЗаписьВидеоФайлВодянойЗнак", "watermarkfile"));
	Рез.Вставить("ЗаписьВидеоКомандаFfmpeg", Новый Структура("Р, А", "ЗаписьВидеоКомандаFfmpeg", "ffmpegcomand"));
	Рез.Вставить("ЗаписьВидеоКомандаConvert", Новый Структура("Р, А", "ЗаписьВидеоКомандаConvert", "convertcomand"));
	Рез.Вставить("ЗаписьВидеоКаталогМузыки", Новый Структура("Р, А", "ЗаписьВидеоКаталогМузыки", "musicpath"));
	Рез.Вставить("ЗаписьВидеоДелатьНаложениеTTS", Новый Структура("Р, А", "ЗаписьВидеоДелатьНаложениеTTS", "dotts"));
	Рез.Вставить("ЗаписьВидеоПутьКДвижкуTTS", Новый Структура("Р, А", "ЗаписьВидеоПутьКДвижкуTTS", "audioenginetts"));
	Рез.Вставить("ЗаписьВидеоИмяTTS", Новый Структура("Р, А", "ЗаписьВидеоИмяTTS", "ttsvoice"));
	Рез.Вставить("ЗаписьВидеоСловарьЗамен", Новый Структура("Р, А", "ЗаписьВидеоСловарьЗамен", "changewordslib"));
	Рез.Вставить("ЗаписьВидеоСловарьЗаменСписок", Новый Структура("Р, А", "ЗаписьВидеоСловарьЗаменСписок", "changewordsliblist"));
	Рез.Вставить("ЗаписьВидеоЭкранШирина", Новый Структура("Р, А", "ЗаписьВидеоЭкранШирина", "screenwidth"));
	Рез.Вставить("ЗаписьВидеоЭкранВысота", Новый Структура("Р, А", "ЗаписьВидеоЭкранВысота", "screenheight"));
	Рез.Вставить("ЗаписьВидеоКоличествоКадров", Новый Структура("Р, А", "ЗаписьВидеоКоличествоКадров", "fps"));
	Рез.Вставить("ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", Новый Структура("Р, А", "ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм", "showframe"));
	Рез.Вставить("ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", Новый Структура("Р, А", "ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы", "movemouse"));
	
	Рез.Вставить("ВерсияПлатформыДляГенерацииEPF", 						Новый Структура("Р, А", "ВерсияПлатформыДляГенерацииEPF", "platformversiongenerateepf"));	
	Рез.Вставить("ДополнительныеПараметры",								Новый Структура("Р, А", "ДополнительныеПараметры", "dopparams"));	
	Рез.Вставить("КлиентыТестирования",									Новый Структура("Р, А", "КлиентыТестирования", "testclienttable"));	
	Рез.Вставить("ТаймаутЗапуска1С", 									Новый Структура("Р, А", "ТаймаутЗапуска1С", "testclienttimeout"));
	Рез.Вставить("ДиапазонПортовTestclient", 							Новый Структура("Р, А", "ДиапазонПортовTestclient", "testclientports"));
	Рез.Вставить("ОсновнойЯзык", 										Новый Структура("Р, А", "ОсновнойЯзык", "defaultlanguage"));

	Рез.Вставить("ТаймаутДляАсинхронныхШагов", 							Новый Структура("Р, А", "ТаймаутДляАсинхронныхШагов", "timeoutforasynchronoussteps"));

	Возврат Рез;
КонецФункции
