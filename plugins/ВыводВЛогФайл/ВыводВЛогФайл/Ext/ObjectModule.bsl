//////////////////////////////////////////////////////////////////////////
//
// LOGOS: вывод в файл
//
//////////////////////////////////////////////////////////////////////////

Перем мФайлЛога;

Перем ПутьКФайлуПолный Экспорт;// в эту переменную будет установлен правильный клиентский путь к текущему файлу

// { Plugin interface
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Тип", ВозможныеТипыПлагинов.Утилита);
	Результат.Вставить("Идентификатор", Метаданные().Имя);
	Результат.Вставить("Представление", "Вывод в лог-файл");
	
	Возврат Новый ФиксированнаяСтруктура(Результат);
КонецФункции

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
КонецПроцедуры
// } Plugin interface

// { API

Процедура ОткрытьФайл(Знач Путь, Знач КодировкаФайла = "utf-8", Знач Добавлять = Истина) Экспорт
	ПутьФайла = Путь;
	Кодировка = КодировкаФайла;
	мФайлЛога = Новый ЗаписьТекста(ПутьФайла, Кодировка,,Добавлять);
КонецПроцедуры

Процедура Вывести(Знач Сообщение) Экспорт
	
	ПроверитьИнициализацию();
	ОткрытьФайл(ПутьФайла, Кодировка);
	мФайлЛога.ЗаписатьСтроку(Сообщение);
	мФайлЛога.Закрыть();
	
КонецПроцедуры

//Процедура Закрыть() Экспорт
//	ПроверитьИнициализацию();
//	мФайлЛога.Закрыть();
//	мФайлЛога = Неопределено;
//КонецПроцедуры

// Устанавливает свойство аппендера, заданное в конфигурационном файле
//
Процедура УстановитьСвойство(Знач ИмяСвойства, Знач Значение) Экспорт
	Если ИмяСвойства = "file" Тогда
		ОткрытьФайл(Значение);
	КонецЕсли;
КонецПроцедуры // УстановитьСвойство()

Функция ПроверитьИнициализацию()
	Если мФайлЛога = Неопределено Тогда
		ВызватьИсключение "Не открыт файл лога";
	КонецЕсли;
КонецФункции

// } API
