#Область ОписаниеКлиентскихПеременных

&НаКлиенте
Перем Ванесса;

&НаКлиенте
Перем КешРежимСовместимости;

#КонецОбласти

#Область ПрограммныйИнтерфейс

// { Plugin interface
&НаКлиенте
Функция ОписаниеПлагина(ВозможныеТипыПлагинов) Экспорт
	Возврат ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов);
КонецФункции

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	Ванесса = КонтекстЯдраПараметр;
КонецПроцедуры
// } Plugin interface

&НаКлиенте
Функция ТехническаяИнформация() Экспорт
	Данные = Новый Структура;

	Данные.Вставить("ВерсияВанессаАДД", Ванесса.ПолучитьВерсиюОбработкиКлиент());
	Данные.Вставить("РежимСовместимости", УзнатьРежимСовместимостиКлиент("Не использовать"));
	
	Возврат ТехническаяИнформацияСервер(Данные);
КонецФункции

&НаКлиенте
Функция СообщитьТехническуюИнформацию() Экспорт
	Сообщить(ТехническаяИнформация());
КонецФункции

&НаКлиенте
Функция УзнатьРежимСовместимостиКлиент(ЗначениеПоУмолчанию) Экспорт
	Если Не ЗначениеЗаполнено(КешРежимСовместимости) Тогда
		КешРежимСовместимости = УзнатьРежимСовместимости(ЗначениеПоУмолчанию);
	КонецЕсли;

	Возврат КешРежимСовместимости;
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ТекстовыйДокумент.УстановитьТекст(ТехническаяИнформация());
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

//#Область ОбработчикиСобытийЭлементовТаблицыФормы<ИмяТаблицыФормы>

//#КонецОбласти

#Область ОбработчикиКомандФормы

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// { Helpers
&НаСервере
Функция ЭтотОбъектНаСервере()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаСервере
Функция ОписаниеПлагинаНаСервере(ВозможныеТипыПлагинов)
	Возврат ЭтотОбъектНаСервере().ОписаниеПлагина(ВозможныеТипыПлагинов);
КонецФункции
// } Helpers

&НаСервере
Функция ТехническаяИнформацияСервер(Знач Данные) Экспорт
	СисИнфо            = Новый СистемнаяИнформация;

	Данные.Вставить("ВерсияПриложения", СисИнфо.ВерсияПриложения);
	Данные.Вставить("ВерсияКонфигурации", Метаданные.Версия);
	Данные.Вставить("ИмяКонфигурации", Метаданные.Имя);
	Данные.Вставить("СинонимКонфигурации", Метаданные.Синоним);
	Данные.Вставить("РежимСовместимостиИнтерфейса", Метаданные.РежимСовместимостиИнтерфейса);
	Данные.Вставить("РежимЗапуска", ТекущийРежимЗапуска());
	Данные.Вставить("ЯзыкСеанса", ТекущийЯзык());
	Данные.Вставить("ЛокализацияСеанса", ТекущийКодЛокализации());
	
	ТипБазы = "Клиент-серверная ИБ";
	Если ЭтоФайловаяБаза() Тогда
		ТипБазы = "Файловая ИБ";
	КонецЕсли;
	Данные.Вставить("ТипБазы", ТипБазы);
	
	Результат = 
		"
		|Техническая информация:
		|	- Версия Vanessa-ADD: " + Данные.ВерсияВанессаАДД + "
		|	- Имя конфигурации: " + Данные.ИмяКонфигурации + "
		|	- Синоним конфигурации: " + Данные.СинонимКонфигурации + "
		|	- Версия конфигурации: " + Данные.ВерсияКонфигурации + "
		|	- Платформа 1С: " + Данные.ВерсияПриложения + "
		|	- Режим совместимости (для TestManager): " + Данные.РежимСовместимости + "
		|	- Режим совместимости интерфейса (для TestManager): " + Данные.РежимСовместимостиИнтерфейса + "
		|	- Режим запуска: " + Данные.РежимЗапуска + "
		|	- Тип базы: " + Данные.ТипБазы + "
		|	- Язык (для TestManager): " + Данные.ЯзыкСеанса + "
		|	- Локализация (для TestManager): " + Данные.ЛокализацияСеанса + "
		|";	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Функция ЭтоФайловаяБаза()
	Возврат Найти(СтрокаСоединенияИнформационнойБазы(), "File=") > 0;
КонецФункции

&НаСервереБезКонтекста
Функция УзнатьРежимСовместимости(ЗначениеПоУмолчанию)
	Значение = ЗначениеПоУмолчанию;

	Попытка
		Значение = Строка(Вычислить("Метаданные.РежимСовместимости"));
	Исключение
		Возврат Значение;
	КонецПопытки;

	Возврат Значение;

КонецФункции

//&НаКлиенте
//Функция СформироватьОписаниеОшибки(Знач Стр, ИмяФайла, ИмяПроцедуры,ИнфоОбОшибке)
//	СисИнфо            = Новый СистемнаяИнформация;
//	ВерсияПриложения   = СисИнфо.ВерсияПриложения;
//	РежимСовместимости = УзнатьРежимСовместимостиКлиент(ПолучитьТекстСообщенияПользователю("$Не использовать$"));
//	ТекстИДРаннера     = "";
//	Если ЗначениеЗаполнено(Объект.ИДРаннера) Тогда
//		ТекстИДРаннера = ", ИДРаннера="+Объект.ИДРаннера;
//	КонецЕсли;

//	ТекстОшибкиTestClient = "";
//	Попытка
//		ИнфоОбОшибке = Неопределено;
//		ИнфоОбОшибке = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьТекущуюИнформациюОбОшибке();
//		Если ИнфоОбОшибке <> Неопределено Тогда
//			ТекстОшибкиTestClient = ВывестиВСообщениеТекстОшибки(ИнфоОбОшибке);
//		КонецЕсли;
//	Исключение
//	КонецПопытки;

//	Стр = Стр + Символы.ПС
//	+ Символы.ПС              + ПолучитьТекстСообщенияПользователю("$Технические данные$") + ":"
//	+ Символы.ПС + "        " + ПолучитьТекстСообщенияПользователю("$ИмяФайла$") +": " + ИмяФайла
//	+ Символы.ПС + "        " + ПолучитьТекстСообщенияПользователю("$ИмяПроцедуры$") + ": " + ИмяПроцедуры
//	+ Символы.ПС + "        " + ПолучитьТекстСообщенияПользователю("$ВерсияVanessaADD$") + ": " + ПолучитьВерсиюОбработкиКлиент()
//	+ Символы.ПС + "        " + ПолучитьТекстСообщенияПользователю("$ВерсияПлатформы$") +": " + ВерсияПриложения
//	+ Символы.ПС + "        " + ПолучитьТекстСообщенияПользователю("$РежимСовместимостиTestManager$") +": " + РежимСовместимости;

//	Если ЗначениеЗаполнено(ТекстОшибкиTestClient) Тогда
//		Стр = Стр + Символы.ПС + ТекстОшибкиTestClient;
//	Иначе
//		ТекстПредупреждения = ПолучитьТекстПредупреждения();
//		Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
//			Стр = Стр + Символы.ПС + "Текст модального окна:" + Символы.ПС
//			+ "    " + ТекстПредупреждения;
//		КонецЕсли;
//	КонецЕсли;

//	Возврат Стр;
//КонецФункции


#КонецОбласти

