Перем КонтекстЯдра;
Перем Ожидаем;
Перем Утверждения;
Перем ГенераторТестовыхДанных;
Перем ЗапросыИзБД;
Перем УтвержденияПроверкаТаблиц;
Перем ДвиженияДокумента;
Перем СписокДокументовДляУдаления;

#Область ЮнитТестирование

Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	
	КонтекстЯдра				= КонтекстЯдраПараметр;
	ГенераторТестовыхДанных		= КонтекстЯдра.Плагин("СериализаторMXL");
	ДвиженияДокумента 			= КонтекстЯдра.Плагин("ДвиженияДокумента");

	СписокДокументовДляУдаления = Новый Массив;
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов) Экспорт
	
	НаборТестов.НачатьГруппу("ВозвратТоваровОтПокупателя", Истина);
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаБезНастройкиПроверок");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверок");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокСИсключениеРегистраИзПроверок");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокСИсключениеРегистраИзПроверокВторойСпособ");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокИсключениеПолейИзПровероки");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокДобавлениеВычисляемогоПоля");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокДобавлениеВычисляемогоПоляНастройкаСверткиРегистров");
	НаборТестов.Добавить("ТестДолжен_ПроверитьДвиженияДокументаВызватьИсключениеПриОтсутсииДвижений");
	
КонецПроцедуры

Процедура ПередЗапускомТеста() Экспорт
	
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если СписокДокументовДляУдаления.Количество() > 0 Тогда
		
		Для Каждого ДокументДляУдаления Из СписокДокументовДляУдаления Цикл 
			Если ДокументДляУдаления.Проведен Тогда
				ДокументОбъект = ДокументДляУдаления.ПолучитьОбъект();
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
		КонецЦикла;	
		
		СписокДокументовДляУдаления.Очистить();
	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

Процедура УдалитьДокументы() Экспорт
	
КонецПроцедуры

Процедура СоздатьВспомогательныеДанные() Экспорт
	
	// Создаем вспомогательные данные, для формирований движений документа.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетВспомогательныеДанные");

КонецПроцедуры	
	
Процедура ТестДолжен_ПроверитьДвиженияДокументаБезНастройкиПроверок() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументСоВсемиДвижениями");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверок() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументСоВсемиДвижениями");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
		
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокСИсключениеРегистраИзПроверок() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистраБухгалтерии");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	ИсключаемыеРегистры = НастройкаПлагина.ИсключаемыеРегистры;
	ПроверяемыеРегистры = НастройкаПлагина.ПроверяемыеРегистры;
	НастройкиПроверкиРегистров = НастройкаПлагина.НастройкиПроверкиРегистров;

	// В макете для регистра бухгалтерии удалены некоторые строки движений для регистра бухгалтерии. Исключаем из проверок регистр бухгалтерии.
	ИсключаемыеРегистры.Добавить("РегистрБухгалтерии.РегистрБухгалтерии1");
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокСИсключениеРегистраИзПроверокВторойСпособ() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистраБухгалтерии");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	ИсключаемыеРегистры = НастройкаПлагина.ИсключаемыеРегистры;
	ПроверяемыеРегистры = НастройкаПлагина.ПроверяемыеРегистры;
	НастройкиПроверкиРегистров = НастройкаПлагина.НастройкиПроверкиРегистров;

	// В макете для регистра бухгалтерии удалены некоторые строки движений для регистра бухгалтерии. Оставляем в проверках все регистры, кроме регистра бухгалтерии.
	ПроверяемыеРегистры.Добавить("РегистрСведений.РСПодчиненныйРегистратору");
	ПроверяемыеРегистры.Добавить("РегистрНакопления.РегистрНакопления2");
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокИсключениеПолейИзПровероки() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистровНекорректныеРегистрСведений");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	ИсключаемыеРегистры = НастройкаПлагина.ИсключаемыеРегистры;
	ПроверяемыеРегистры = НастройкаПлагина.ПроверяемыеРегистры;
	НастройкиПроверкиРегистров = НастройкаПлагина.НастройкиПроверкиРегистров;

	// В макете для регистра бухгалтерии удалены некоторые движений для регистра бухгалтерии и регистра накопления. Удаляем из проверок эти регистры.
	ИсключаемыеРегистры.Добавить("РегистрБухгалтерии.РегистрБухгалтерии1");
	ИсключаемыеРегистры.Добавить("РегистрНакопления.РегистрНакопления2");
	
	// В макете для регистра сведений изменены зачения ресурса. Исключим это поле из проверок движений регистра.
	
	// Вариант 1. Исключаем конкретные поля.
	
	// Получаем настройки проверки регистра.	
	НастрокаПроверкиРегистра = ДвиженияДокумента.НоваяНастройкаПроверкиРегистра();
	ВычисляемыеПоля = НастрокаПроверкиРегистра.ВычисляемыеПоля;
	ИсключаемыеПоля = НастрокаПроверкиРегистра.ИсключаемыеПоля;
	ПроверяемыеПоля = НастрокаПроверкиРегистра.ПроверяемыеПоля;

	ИсключаемыеПоля.Добавить("РесурсЧисло");

	НастройкиПроверкиРегистров.Вставить("РегистрСведений.РСПодчиненныйРегистратору",НастрокаПроверкиРегистра);
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

	
	// Вариант 2. Оставляем только те поля, по которым необходимо выполнять проверку.
	
	// Получаем настройки проверки регистра.	
	НастрокаПроверкиРегистра = ДвиженияДокумента.НоваяНастройкаПроверкиРегистра();
	ВычисляемыеПоля = НастрокаПроверкиРегистра.ВычисляемыеПоля;
	ИсключаемыеПоля = НастрокаПроверкиРегистра.ИсключаемыеПоля;
	ПроверяемыеПоля = НастрокаПроверкиРегистра.ПроверяемыеПоля;

	ПроверяемыеПоля.Добавить("ПростойСправочник");
	ПроверяемыеПоля.Добавить("ПростойСправочник2");
	ПроверяемыеПоля.Добавить("РеквизитБулево");
	
	НастройкиПроверкиРегистров.Вставить("РегистрСведений.РСПодчиненныйРегистратору",НастрокаПроверкиРегистра);
	
	// Вариант 3. Убираем лишние поля через настройку свертки регистра.
	
	// Получаем настройки проверки регистра.	
	НастрокаПроверкиРегистра = ДвиженияДокумента.НоваяНастройкаПроверкиРегистра();

	НастройкаСвертки = НастрокаПроверкиРегистра.НастройкаСвертки;
	НастройкаСвертки.Свернуть = Истина;
	НастройкаСвертки.КолонкиГруппировок = "ПростойСправочник,ПростойСправочник2,РеквизитБулево";
	НастройкаСвертки.КолонкиСуммирования = "";
	
	НастройкиПроверкиРегистров.Вставить("РегистрСведений.РСПодчиненныйРегистратору",НастрокаПроверкиРегистра);
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокДобавлениеВычисляемогоПоля() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистраБухгалтерииРегистрНакопления");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	ИсключаемыеРегистры = НастройкаПлагина.ИсключаемыеРегистры;
	ПроверяемыеРегистры = НастройкаПлагина.ПроверяемыеРегистры;
	НастройкиПроверкиРегистров = НастройкаПлагина.НастройкиПроверкиРегистров;

	// В макете для регистра бухгалтерии удалены некоторые движений для регистра бухгалтерии и регистра накопления. Удаляем из проверок эти регистры.
	ИсключаемыеРегистры.Добавить("РегистрБухгалтерии.РегистрБухгалтерии1");
	ИсключаемыеРегистры.Добавить("РегистрНакопления.РегистрНакопления2");
	
	// В макете для регистра сведений изменены зачения ресурса. Исключим это поле из проверок движений регистра.
	
	// Получаем настройки проверки регистра.	
	НастрокаПроверкиРегистра = ДвиженияДокумента.НоваяНастройкаПроверкиРегистра();
	ВычисляемыеПоля = НастрокаПроверкиРегистра.ВычисляемыеПоля;
	ИсключаемыеПоля = НастрокаПроверкиРегистра.ИсключаемыеПоля;
	ПроверяемыеПоля = НастрокаПроверкиРегистра.ПроверяемыеПоля;

	// Исключим из проверки неокторые поля, которые могут учавствовать в проверке движений документа.
	ИсключаемыеПоля.Добавить("РесурсЧисло");
	
	// Получаем настройку вычисляемого поля.
	НовоеВычисляемыеПоля = ДвиженияДокумента.НовоеВычисляемоеПоле();
	НовоеВычисляемыеПоля.Имя 		= "КоличествоВсего";
	НовоеВычисляемыеПоля.Тип 		= Новый ОписаниеТипов("Число");
	НовоеВычисляемыеПоля.Формула 	= "ЗаписьРегистра.РесурсЧисло / 100 + 26";	
	ВычисляемыеПоля.Добавить(НовоеВычисляемыеПоля);	
	
	НастройкиПроверкиРегистров.Вставить("РегистрСведений.РСПодчиненныйРегистратору",НастрокаПроверкиРегистра);
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаСНастройкойПроверокДобавлениеВычисляемогоПоляНастройкаСверткиРегистров() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистраБухгалтерииРегистрНакопления");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	
	// Получаем настройки плагина.
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	
	НастройкаПлагина  = ДвиженияДокумента.НоваяНастройкаПроверкиДвиженийДокумента();
	ИсключаемыеРегистры = НастройкаПлагина.ИсключаемыеРегистры;
	ПроверяемыеРегистры = НастройкаПлагина.ПроверяемыеРегистры;
	НастройкиПроверкиРегистров = НастройкаПлагина.НастройкиПроверкиРегистров;

	// В макете для регистра бухгалтерии удалены некоторые движений для регистра бухгалтерии и регистра накопления. Удаляем из проверок эти регистры.
	ИсключаемыеРегистры.Добавить("РегистрБухгалтерии.РегистрБухгалтерии1");
	ИсключаемыеРегистры.Добавить("РегистрНакопления.РегистрНакопления2");
	
	// В макете для регистра сведений изменены зачения ресурса. Исключим это поле из проверок движений регистра.
	
	// Получаем настройки проверки регистра.	
	НастрокаПроверкиРегистра = ДвиженияДокумента.НоваяНастройкаПроверкиРегистра();
	ВычисляемыеПоля = НастрокаПроверкиРегистра.ВычисляемыеПоля;
	ИсключаемыеПоля = НастрокаПроверкиРегистра.ИсключаемыеПоля;
	ПроверяемыеПоля = НастрокаПроверкиРегистра.ПроверяемыеПоля;

	// Исключим из проверки неокторые поля, которые могут учавствовать в проверке движений документа.
	ИсключаемыеПоля.Добавить("РесурсЧисло");
	
	// Получаем настройку вычисляемого поля.
	НовоеВычисляемыеПоля = ДвиженияДокумента.НовоеВычисляемоеПоле();
	НовоеВычисляемыеПоля.Имя 		= "КоличествоВсего";
	НовоеВычисляемыеПоля.Тип 		= Новый ОписаниеТипов("Число");
	НовоеВычисляемыеПоля.Формула 	= "ЗаписьРегистра.РесурсЧисло / 100 + 26";	
	ВычисляемыеПоля.Добавить(НовоеВычисляемыеПоля);	
	
	НастройкаСвертки = НастрокаПроверкиРегистра.НастройкаСвертки;
	НастройкаСвертки.Свернуть = Истина;
	НастройкаСвертки.КолонкиГруппировок = "РеквизитБулево";
	НастройкаСвертки.КолонкиСуммирования = "КоличествоВсего";
	
	НастройкиПроверкиРегистров.Вставить("РегистрСведений.РСПодчиненныйРегистратору",НастрокаПроверкиРегистра);
	
	ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2,НастройкаПлагина);	

КонецПроцедуры

Процедура ТестДолжен_ПроверитьДвиженияДокументаВызватьИсключениеПриОтсутсииДвижений() Экспорт
	
	// Иниицализируем документ с движениями на основании таблиц mxl в макете обработки.
	СтруктураДанных = ГенераторТестовыхДанных.СоздатьДанныеПоМакетам(ЭтотОбъект, "МакетДокументБезДвиженийРегистраБухгалтерииРегистрНакопления");
	
	// Считываем документ из загруженных данных.
	Документ2 = СтруктураДанных.Документ2000000001От25_09_201814_11_07;
	СписокДокументовДляУдаления.Добавить(Документ2);
	Попытка
		ДвиженияДокумента.ПроверитьДвиженияДокумента(Документ2);
	Исключение
		Возврат;
	КонецПопытки;
	
	ВызватьИсключение "Должны были получить исключение, а его не было";	

КонецПроцедуры
