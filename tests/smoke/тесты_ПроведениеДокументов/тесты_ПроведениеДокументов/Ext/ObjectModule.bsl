Перем КонтекстЯдра;
Перем Утверждения;
Перем УтвержденияПроверкаТаблиц;

//{ основная процедура для юнит-тестирования xUnitFor1C
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	УтвержденияПроверкаТаблиц = КонтекстЯдра.Плагин("УтвержденияПроверкаТаблиц");
	
	ЗагрузитьНастройки();
КонецПроцедуры

Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки();
	
	Для Каждого МетаОбъект Из Метаданные.Документы Цикл
		Если МетаОбъект.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить 
			И ПравоДоступа("Проведение", МетаОбъект) Тогда
			ДобавитьТестыДляДокумента(НаборТестов, МетаОбъект);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗагрузитьНастройки()
    КлючТеста = "ПроведениеДокументов";
    ПлагинНастройки = КонтекстЯдра.Плагин("Настройки");
    ПлагинНастройки.Инициализация(КонтекстЯдра);
    
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Настройки = ПлагинНастройки.ПолучитьНастройку(КлючТеста);
    If ТипЗнч(Настройки) <> Тип("Структура") Then
        Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Настройки);
        Настройки = НастройкиПоУмолчанию;
    EndIf;
КонецПроцедуры

Функция НастройкиПоУмолчанию()
	// за последний год
	КонецПериода = ТекущаяДатаСеанса();
	НачалоПериода = ДобавитьМесяц(КонецПериода, -12);
	
	ПараметрыОтбораДокументов = Новый Структура;
	ПараметрыОтбораДокументов.Вставить("НачалоПериода", НачалоПериода);
	ПараметрыОтбораДокументов.Вставить("КонецПериода", КонецПериода);
	
	ПараметрыОтбораДокументов.Вставить("КоличествоДокументов", 10);
	
	Возврат ПараметрыОтбораДокументов;
КонецФункции

Процедура ДобавитьТестыДляДокумента(НаборТестов, МетаОбъект)

	ПараметрыОтбораДокументов = Настройки;

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ссылка,
	|	Представление
	|ИЗ
	|	Документ." + МетаОбъект.Имя + "
	|ГДЕ
	|	Проведен	
	|	И Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	МоментВремени Убыв";
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтбораДокументов.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОтбораДокументов.КонецПериода);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, 
								"ВЫБРАТЬ ПЕРВЫЕ 1", 
								"ВЫБРАТЬ ПЕРВЫЕ " + Формат(ПараметрыОтбораДокументов.КоличествоДокументов, "ЧГ=")
								);	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;	
	КонецЕсли; 
	
	НаборТестов.НачатьГруппу(МетаОбъект.Синоним + " - Документ."  + МетаОбъект.Имя);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Выборка.Ссылка);
		ПредставлениеТеста = "Проведение и проверка движений до и после - " + Выборка.Представление;
		НаборТестов.Добавить("Тест_ПровестиДокумент", ПараметрыТеста, ПредставлениеТеста);			
	КонецЦикла; 
		
КонецПроцедуры

Функция ПолучитьДвиженияДокумента(ДокументОбъект)
	
	Результат = Новый Соответствие; 
	
	Для Каждого Движение Из ДокументОбъект.Движения Цикл
		ТипДвижения = ТипЗнч(Движение);
		Движение.Прочитать();
		ТаблицаДвижения = Движение.Выгрузить();
		Результат.Вставить(ТипДвижения, ТаблицаДвижения);
	КонецЦикла; 
	
	Возврат Результат;
	
КонецФункции
//}

//{ Блок юнит-тестов
Процедура ПередЗапускомТеста() Экспорт
	НачатьТранзакцию();
КонецПроцедуры

Процедура ПослеЗапускаТеста() Экспорт
	Если ТранзакцияАктивна() Тогда
	    ОтменитьТранзакцию();
	КонецЕсли;
КонецПроцедуры

Процедура Тест_ПровестиДокумент(ДокументСсылка) Экспорт
	
	ДокументОбъект = ДокументСсылка.ПолучитьОбъект();
	
	ДвиженияДо = ПолучитьДвиженияДокумента(ДокументОбъект);
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	ДвиженияПосле = ПолучитьДвиженияДокумента(ДокументОбъект);
	
	Для Каждого КлючИЗначение Из ДвиженияДо Цикл
		ТипДвижения = КлючИЗначение.Ключ;
		ТаблицаДвиженияДо = КлючИЗначение.Значение;
		ТаблицаДвиженияПосле = ДвиженияПосле.Получить(ТипДвижения);
		УтвержденияПроверкаТаблиц.ПроверитьРавенствоТаблиц(ТаблицаДвиженияДо, ТаблицаДвиженияПосле, 
			"Перепроведение изменяет движения документа. Отличаются движения по регистру " + ТипДвижения);
	КонецЦикла; 
	
КонецПроцедуры

//}